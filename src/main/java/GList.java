import javax.persistence.EntityManagerFactory;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.util.List;

public class GList {
    private JButton backToMenuButton;
    private JTable table1;

    public JPanel getPanelList() {
        return jPanelList;
    }

    private JPanel jPanelList;
    private final JFrame jFrame;
    private final DefaultTableModel tableModel;
    private final User user;
    private final List<Result> results;
    private EntityManagerFactory managerFactory;

    public GList(JFrame jFrame, User user, EntityManagerFactory managerFactory1) {
        this.user = user;
        this.results = user.getResults();
        this.jFrame = jFrame;
        this.managerFactory = managerFactory1;
        String[] columnNames = {
                "Nr", " ", "wynik", "czas", "data", "poziom"
        };
        this.tableModel = new DefaultTableModel(columnNames, 0);
        initTable();
        this.table1.setModel(tableModel);
        backToMenuButton.addActionListener(e -> {
            jFrame.getContentPane().removeAll();
            FirstMenu firstMenu = new FirstMenu(this.jFrame, this.user, this.managerFactory);
        });
    }

    private void initTable() {

        for (int i = 0; i < results.size(); i++) {
            String position = Integer.toString(i + 1);
            String name = results.get(i).getName();
            String scoreStr = results.get(i).getScore() + "/" + results.get(i).getMax();
            String time = results.get(i).getTime() + " sec";
            String date = results.get(i).getDate();
            String level = results.get(i).getLevel().toString();
            Object[] data = {position, name, scoreStr, time, date, level};
            this.tableModel.addRow(data);
        }

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        jPanelList = new JPanel();
        jPanelList.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        final JScrollPane scrollPane1 = new JScrollPane();
        jPanelList.add(scrollPane1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        table1 = new JTable();
        scrollPane1.setViewportView(table1);
        backToMenuButton = new JButton();
        backToMenuButton.setText("Powrót do menu głównego");
        jPanelList.add(backToMenuButton, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return jPanelList;
    }

}
